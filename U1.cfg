#PID_CALIBRATE HEATER=iDryer_U1_Heater TARGET=50

#==================================================
#=====================CONFIG=======================
#==================================================
[heater_generic iDryer_U1_Heater]
heater_pin: H_U1
# if your iDryer is used as a second MCU use
# heater_pin: iDryer:H_U1
# and change everywhere!
max_power: 1
sensor_type: NTC 100K MGB18-104F39050L32 #Generic 3950
sensor_pin: T_U1
control: pid
pwm_cycle_time: 0.3
min_temp: 0
max_temp: 120
pid_Kp=32.923
pid_Ki=5.628
pid_Kd=48.150


[verify_heater iDryer_U1_Heater]
max_error: 240
check_gain_time: 120
heating_gain: 1


[heater_fan Fan_U1]
fan_speed: 1
pin: FAN_U1
heater: iDryer_U1_Heater
heater_temp: 55


#==================================================
#=======================SHT========================
#==================================================
[temperature_sensor iDryer_U1_Air]
sensor_type: SHT3X
i2c_address: 68
i2c_software_sda_pin: gpio20 #second HW version - green PCB | i2c_software_sda_pin: gpio18 #first HW version - red PCB
i2c_software_scl_pin: gpio21 #second HW version - green PCB | # i2c_software_scl_pin: gpio19 #first HW version - red PCB


#==================================================
#=====================SERVO========================
#==================================================
[servo srv_U1]
pin: SRV_U1
maximum_servo_angle: 180
minimum_pulse_width: 0.00055 #0.00055
maximum_pulse_width: 0.002


[gcode_macro servo_U1]
gcode:
    {% set angle = params.ANGLE|default(90)|int %} 
    SET_SERVO SERVO=srv_U1 ANGLE={angle}
    

[delayed_gcode _TOGGLE_SERVO_U1]
gcode:
    {% set unit_data = printer['gcode_macro DRY_U1'] %}
    {% set servo_angle = unit_data.servo_angle %}
    
    { action_respond_info("----------_TOGGLE_SERVO_U1---------- servo_angle  %s" %(servo_angle))}
    {% if servo_angle == printer['gcode_macro DRY_U1'].servo_open_angle %}
        SET_SERVO SERVO=srv_U1 ANGLE={printer['gcode_macro DRY_U1'].servo_closed_angle}
        
        SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=servo_angle VALUE={printer['gcode_macro DRY_U1'].servo_closed_angle}
        UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION={printer['gcode_macro DRY_U1'].servo_closed_time}
    {% elif servo_angle == printer['gcode_macro DRY_U1'].servo_closed_angle %}
        SET_SERVO SERVO=srv_U1 ANGLE={printer['gcode_macro DRY_U1'].servo_open_angle}
        
        SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=servo_angle VALUE={printer['gcode_macro DRY_U1'].servo_open_angle}
        UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION={printer['gcode_macro DRY_U1'].servo_open_time}
    {% endif %}


#========================================================
#=====================iDryer macros======================
#========================================================
[gcode_macro OFF_U1]
gcode:
    UPDATE_DELAYED_GCODE ID=_UPDATE_U1 DURATION=0
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION=0
    SET_HEATER_TEMPERATURE HEATER=iDryer_U1_Heater TARGET=0


[gcode_macro PLA_U1]
variable_unit_temp: 55
variable_unit_duration: 180
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro PETG_U1]
variable_unit_temp: 65
variable_unit_duration: 240
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro TPU_U1]
variable_unit_temp: 60
variable_unit_duration: 300
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro ABS_U1]
variable_unit_temp: 80
variable_unit_duration: 240
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro PA_U1]
variable_unit_temp: 90
variable_unit_duration: 240
gcode:
    DRY_U1 UNIT_TEMPERATURE={unit_temp} HUMIDITY=10 TIME={unit_duration}


[gcode_macro DRY_U1]
variable_temp: 5
variable_humidity: 5
variable_duration: 5
variable_delta_high: 20
variable_servo_angle: 0 #degrees
variable_servo_open_angle: 91 #degrees
variable_servo_closed_angle: 124 #degrees
variable_servo_open_time: 10 #second
variable_servo_closed_time: 30 #second
variable_data: {}
gcode:
    {% set set_unit_temp = params.UNIT_TEMPERATURE|default(40)|int %} 
    {% set set_unit_humidity = params.HUMIDITY|default(10)|int%} 
    {% set set_unit_duration = params.TIME|default(240)|int%}
    
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=servo_angle VALUE={servo_closed_angle}
    SET_SERVO SERVO=srv_U1 ANGLE={servo_angle}

    # { action_respond_info(" DRY_U1 ----- [ temp  %s | humidity  %s | duration  %s ] -----" %(set_unit_temp, set_unit_humidity, set_unit_duration) )}

    {action_respond_info("Humidity  %.2f%%" %(printer["sht3x iDryer_U1_Air"].humidity))}
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=temp VALUE={set_unit_temp}
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=humidity VALUE={set_unit_humidity}
    SET_GCODE_VARIABLE MACRO=DRY_U1 VARIABLE=duration VALUE={set_unit_duration}

    UPDATE_DELAYED_GCODE ID=_UPDATE_U1 DURATION=1
    UPDATE_DELAYED_GCODE ID=_TOGGLE_SERVO_U1 DURATION=2


[delayed_gcode _UPDATE_U1]
gcode:
    {% set unit_data = printer['gcode_macro DRY_U1'] %}
    {% set temperature = unit_data.temp %}
    {% set delta_high =  unit_data.delta_high %}
    
    # { action_respond_info("Unit_1 T: %s H: %.2f%%" %(temperature, printer["sht3x iDryer_U1_Air"].humidity))}
    
    {% if printer['temperature_sensor iDryer_U1_Air'].temperature|int > temperature|int %}
        {% set target_temp = 0|int %}
    {% elif printer['temperature_sensor iDryer_U1_Air'].temperature|int == temperature|int %}
        {% set target_temp = printer['temperature_sensor iDryer_U1_Air'].temperature|int %}
    {% elif printer['temperature_sensor iDryer_U1_Air'].temperature|int < temperature|int %}
        {% set target_temp = temperature - printer['temperature_sensor iDryer_U1_Air'].temperature + temperature + delta_high%}
        {% if target_temp > temperature + delta_high %} 
            {% set target_temp = temperature|int + delta_high|int %}
        {% endif %}
    {% endif %}
    
    SET_HEATER_TEMPERATURE HEATER=iDryer_U1_Heater TARGET={target_temp|int}
    UPDATE_DELAYED_GCODE ID=_UPDATE_U1 DURATION=1
